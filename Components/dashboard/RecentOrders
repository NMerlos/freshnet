import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Skeleton } from "@/components/ui/skeleton";
import { format } from "date-fns";
import { 
  Clock, 
  CheckCircle, 
  Package, 
  Truck, 
  AlertTriangle,
  Eye,
  Phone
} from "lucide-react";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";

const statusConfig = {
  pending: { 
    icon: Clock, 
    color: "bg-yellow-100 text-yellow-700 border-yellow-200",
    label: "Pendiente"
  },
  confirmed: { 
    icon: CheckCircle, 
    color: "bg-blue-100 text-blue-700 border-blue-200",
    label: "Confirmado"
  },
  preparing: { 
    icon: Package, 
    color: "bg-purple-100 text-purple-700 border-purple-200",
    label: "Preparando"
  },
  ready: { 
    icon: Truck, 
    color: "bg-green-100 text-green-700 border-green-200",
    label: "Listo!"
  },
  delivered: { 
    icon: CheckCircle, 
    color: "bg-emerald-100 text-emerald-700 border-emerald-200",
    label: "Entregado"
  },
  cancelled: { 
    icon: AlertTriangle, 
    color: "bg-red-100 text-red-700 border-red-200",
    label: "Cancelado"
  }
};

export default function RecentOrders({ orders, isLoading }) {
  if (isLoading) {
    return (
      <Card className="bg-white/80 backdrop-blur-sm">
        <CardHeader>
          <CardTitle className="text-xl font-bold">Últimos pedidos</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {Array(5).fill(0).map((_, i) => (
              <div key={i} className="flex items-center gap-4">
                <Skeleton className="w-12 h-12 rounded-full" />
                <div className="flex-1">
                  <Skeleton className="h-4 w-32 mb-2" />
                  <Skeleton className="h-3 w-24" />
                </div>
                <Skeleton className="h-6 w-20 rounded-full" />
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="bg-white/80 backdrop-blur-sm">
      <CardHeader className="flex flex-row items-center justify-between">
        <CardTitle className="text-xl font-bold">Últimos pedidos</CardTitle>
        <Link to={createPageUrl("Orders")}>
          <Button variant="outline" size="sm" className="text-emerald-600 border-emerald-200">
            <Eye className="w-4 h-4 mr-2" />
            View All
          </Button>
        </Link>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {orders.length === 0 ? (
            <div className="text-center py-8">
              <Package className="w-12 h-12 text-gray-300 mx-auto mb-4" />
              <p className="text-gray-500">No orders yet</p>
              <p className="text-sm text-gray-400">Orders will appear here once customers start messaging</p>
            </div>
          ) : (
            orders.map((order) => {
              const status = statusConfig[order.status] || statusConfig.pending;
              const StatusIcon = status.icon;
              
              return (
                <div key={order.id} className="flex items-center gap-4 p-4 rounded-xl border border-gray-100 hover:bg-gray-50 transition-colors">
                  <div className="w-12 h-12 bg-gradient-to-br from-emerald-100 to-emerald-200 rounded-full flex items-center justify-center">
                    <Phone className="w-6 h-6 text-emerald-600" />
                  </div>
                  
                  <div className="flex-1 min-w-0">
                    <div className="flex items-center gap-2 mb-1">
                      <p className="font-semibold text-gray-900 truncate">
                        {order.customer_name}
                      </p>
                      {order.needs_review && (
                        <Badge variant="outline" className="bg-red-50 text-red-600 border-red-200">
                          <AlertTriangle className="w-3 h-3 mr-1" />
                          Review
                        </Badge>
                      )}
                    </div>
                    <p className="text-sm text-gray-500">
                      ${order.total_amount?.toFixed(2)} • {format(new Date(order.created_date), "MMM d, h:mm a")}
                    </p>
                    <p className="text-xs text-gray-400">
                      {order.order_items?.length || 0} items
                    </p>
                  </div>
                  
                  <Badge className={`${status.color} border`}>
                    <StatusIcon className="w-3 h-3 mr-1" />
                    {status.label}
                  </Badge>
                </div>
              );
            })
          )}
        </div>
      </CardContent>
    </Card>
  );
}